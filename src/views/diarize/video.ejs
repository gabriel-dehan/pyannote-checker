<h1>Diarize</h1>

<% if (isProcessing) { %>
    <p>Processing <%= data.url %>, please come back in a few minutes...</p>
<% } else if (data) { %>
    <h2><%= data.name %></h2>
    <div id="player"></div>
    <div id="subtitles">
      <strong id="speaker"></strong>
      <span id="text"></span>
    </div>

    <div class="side-by-side-container">
      <ul class="diarization-block">
        <% data.diarization.diarization.forEach((segment, index) => { %>
            <li data-segment-id="<%= index %>"><%= segment.start %> - <%= segment.end %>: <%= segment.speaker %></li>
        <% }); %>
      </ul>
      <ul class="captions-block">
        <% data.captions.forEach((segment, index) => { %>
            <li data-segment-id="<%= index %>"><%= segment.start %> - <%= segment.end %>: <%= segment.text %></li>
        <% }); %>
      </ul>
    </div>
<% } %>

<% if (!isProcessing) { %>
  <script>
    var player;
    var speaker;
    var diarizationData = <%- JSON.stringify(data.diarization) %>;
    var captionData = <%- JSON.stringify(data.captions) %>;

    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
          height: '360',
          width: '640',
          videoId: '<%= data.videoId %>',
          events: {
              'onReady': onPlayerReady
          }
      });
    }

    function onPlayerReady(event) {
      setInterval(renderSegments, 500);
      setInterval(renderSubtitles, 500);
    }

    // Refactor
    function renderSegments() {
      var time = player.getCurrentTime();

      // Handle diarization highlighting
      var currentSegmentIndex = diarizationData.diarization.findIndex(segment => time >= segment.start && time <= segment.end);
      if (currentSegmentIndex) {
        // unhighlight all segments
        document.querySelectorAll('.diarization-block li').forEach(segment => {
          segment.style.backgroundColor = '';
        });
        // highlight diarization segment
        var segment = document.querySelector(`.diarization-block li[data-segment-id="${currentSegmentIndex}"]`);
        if (segment) {
          segment.style.backgroundColor = 'yellow';
        }
      }

      // Handle captions highlighting
      var currentSegmentIndex = captionData.findIndex(segment => time >= segment.start && time <= segment.end);
      if (currentSegmentIndex) {
        // unhighlight all segments
        document.querySelectorAll('.captions-block li').forEach(segment => {
          segment.style.backgroundColor = '';
        });
        // highlight captions segment
        var segment = document.querySelector(`.captions-block li[data-segment-id="${currentSegmentIndex}"]`);
        if (segment) {
          segment.style.backgroundColor = 'yellow';
        }
      }
    }

    function renderSubtitles() {
      var time = player.getCurrentTime();
      var currentDiarizationSegmentIndex = diarizationData.diarization.findIndex(segment => time >= segment.start && time <= segment.end);
      var currentCaptionSegmentIndex = captionData.findIndex(segment => time >= segment.start && time <= segment.end);

      if (currentDiarizationSegmentIndex || currentCaptionSegmentIndex) {
        var text = captionData[currentCaptionSegmentIndex].text;

        if (currentDiarizationSegmentIndex) {
          speaker = diarizationData.diarization[currentDiarizationSegmentIndex].speaker;
        }

        document.getElementById('speaker').textContent = `[${speaker}]`;
        document.getElementById('text').textContent = text;
      }
    }
  </script>
<% } %>
