<% if (isProcessing) { %>
  <div class="processing-container">
    <div class="loader"></div>
    <p class="processing-message">Processing video at <strong><%= data.url %></strong>...<br><br>
      Please come back in a few minutes üï∞Ô∏è
    </p>
  </div>
<% } else if (data) { %>
  <h2><%= data.name %></h2>
  <div id="player"></div>
  <div id="subtitles">
    <strong id="speaker"></strong>&nbsp;
    <span id="text"></span>
  </div>

  <div class="side-by-side-container">
    <ul class="diarization-block">
      <li class="block-header">Diarization</li>
      <% data.diarization.diarization.forEach((segment, index) => { %>
          <li data-segment-id="<%= index %>"><strong><%= segment.start %> - <%= segment.end %></strong>: <%= segment.speaker %></li>
      <% }); %>
    </ul>
    <ul class="captions-block">
      <li class="block-header">Captions</li>
      <% data.captions.forEach((segment, index) => { %>
          <li data-segment-id="<%= index %>"><strong><%= segment.start %> - <%= segment.end %></strong>: <%= segment.text %></li>
      <% }); %>
    </ul>
  </div>

  <form id="speaker-alias-form">
    <h3>Set speakers aliases</h3>
    <div class="speaker-alias-form-container">
      <div id="speaker-alias-inputs"></div>
      <button type="submit">Set aliases</button>
    </div>
  </form>

<% } %>

<% if (!isProcessing) { %>
  <script>
    // TODO: Move the JS elsewhere, it's a bit of a mess

    // Load YouTube IFrame API only when needed
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var headScript = document.getElementsByTagName('head')[0];
    headScript.appendChild(tag);

    // Initialize
    var player;
    var speaker;
    var diarizationData = <%- JSON.stringify(data.diarization) %>;
    var captionData = <%- JSON.stringify(data.captions) %>;
    var speakerAliases = {};

    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
          height: '540',
          width: '960',
          videoId: '<%= data.videoId %>',
          events: {
              'onReady': onPlayerReady
          }
      });
    }

    function initializeSpeakerAliasForm() {
      var speakers = [...new Set(diarizationData.diarization.map(segment => segment.speaker))];
      var inputsContainer = document.getElementById('speaker-alias-inputs');

      speakers.forEach(speaker => {
        var input = document.createElement('input');
        input.type = 'text';
        input.name = speaker;
        input.placeholder = `Alias for ${speaker}`;
        input.value = speakerAliases[speaker] || '';

        var label = document.createElement('label');
        label.textContent = `${speaker}: `;
        label.appendChild(input);

        inputsContainer.appendChild(label);
      });

      document.getElementById('speaker-alias-form').addEventListener('submit', function(e) {
        e.preventDefault();
        updateSpeakerAliases();
      });
    }

    function updateSpeakerAliases() {
      var inputs = document.getElementById('speaker-alias-inputs').getElementsByTagName('input');
      for (var input of inputs) {
        if (input.value) {
          speakerAliases[input.name] = input.value;
        } else {
          delete speakerAliases[input.name];
        }
      }
      renderSegments();
      renderSubtitles();
    }

    function getDisplayName(speaker) {
      return speakerAliases[speaker] || speaker;
    }

    function onPlayerReady(event) {
      initializeSpeakerAliasForm();
      setInterval(renderSegments, 500);
      setInterval(renderSubtitles, 500);
    }

    // TODO: Refactor
    function renderSegments() {
      var time = player.getCurrentTime();

      // Handle diarization highlighting
      var currentSegmentIndex = diarizationData.diarization.findIndex(segment => time >= segment.start && time <= segment.end);
      if (currentSegmentIndex) {
        // unhighlight all segments
        document.querySelectorAll('.diarization-block li').forEach(segment => {
          segment.style.backgroundColor = '';
        });
        // highlight diarization segment
        var segment = document.querySelector(`.diarization-block li[data-segment-id="${currentSegmentIndex}"]`);
        if (segment) {
          segment.style.backgroundColor = 'yellow';
          var speakerElement = segment.querySelector('strong');
        if (speakerElement) {
          var originalSpeaker = diarizationData.diarization[currentSegmentIndex].speaker;
            speakerElement.textContent = getDisplayName(originalSpeaker);
          }
        }
      }

      // Handle captions highlighting
      var currentSegmentIndex = captionData.findIndex(segment => time >= segment.start && time <= segment.end);
      if (currentSegmentIndex) {
        // unhighlight all segments
        document.querySelectorAll('.captions-block li').forEach(segment => {
          segment.style.backgroundColor = '';
        });
        // highlight captions segment
        var segment = document.querySelector(`.captions-block li[data-segment-id="${currentSegmentIndex}"]`);
        if (segment) {
          segment.style.backgroundColor = 'yellow';
        }
      }
    }

    function renderSubtitles() {
      var time = player.getCurrentTime();
      var currentDiarizationSegmentIndex = diarizationData.diarization.findIndex(segment => time >= segment.start && time <= segment.end);
      var currentCaptionSegmentIndex = captionData.findIndex(segment => time >= segment.start && time <= segment.end);

      if (currentDiarizationSegmentIndex === -1 && currentCaptionSegmentIndex === -1) {
        document.getElementById('speaker').textContent = '';
        document.getElementById('text').textContent = '';
      } else if (currentDiarizationSegmentIndex || currentCaptionSegmentIndex) {
        var text = captionData[currentCaptionSegmentIndex]?.text || null;

        if (currentDiarizationSegmentIndex) {
          speaker = diarizationData.diarization[currentDiarizationSegmentIndex]?.speaker || null;
        }

        if (speaker) {
          document.getElementById('speaker').textContent = `[${getDisplayName(speaker)}]`;
        }
        if (text) {
          document.getElementById('text').textContent = text;
        }
      }
    }
  </script>
<% } %>
